Konstruktor klasy `Vector2` posiadający:
- pola x i y
- funkcje 
    - diff(vector) - odejmuje aktualny wektor od wektora podanego w argumencie
    - multiplyBy(number) - mnoży x i y wektora razy liczbę podaną w argumencie
    - toString()  - zwraca tekst w formacie: "x: <wartość> y: <wartość>
  
Konstruktor klasy `Ship` o następujących:
- polach:
    - faction
    - position - typu Vector2
    - strength
    - health
- funkcjach:
    - getDistance(enemyShip) - jeśli to możliwe, oblicza dystans dzielący dwa statki (różnicę wektorów). W przeciwnym wypadku wypisuje komunikat błędu
    - checkHealth() - sprawdza, czy zdrowie statku spadło poniżej 0. Jeśli tak, wypisuje w konsoli odpowiedni komunikat
    - getDamage(amount) - obniża liczbę punktów zdrowia o podaną liczbę i sprawdza, czy statek został zniszczony
    - makeDamage(enemyShip) - zadaje obrażenia statkowi podanemu w argumencie (o wartość zmiennej strength)
Klasę `RebelShip` dziedziczącą po `Ship`:
- niech konstruktor przyjmuje parametry: position, strength, health
- wartość faction powinna być na stałe ustawiona jako "Rebel Alliance"
- zdefiniuj funkcję dla klasy RebelShip 
    - hyperspeed() - ustawia wartość position na undefined
Klasę `DeathStar` dziedziczącą po Ship
- niech konstruktor przyjmuje parametr: position
- niech faction będzie ustawiony na stałę na "Empire"
- niech klasa zawiera następujące pola: deathRayAvailable
- zawierającą funkcje:
    - makeDamage(enemyShip) - jeśli deathRayAvailable jest ustawione na true, to wywołuje funkcje odziedziczoną po Ship, a następnie ustawia deathRay na niedostępny na ustaloną liczbę sekund. Jeśli deathRayAvailable jest równe false, drukuje komunikat.

W razie potrzeby można zadeklarować zmienne i funkcje pomocnicze w klasie DeathStar.

Przykładowy output:

utworzonyVector.toString(); 
// x: 3 y: 4
utworzonyVector.add(drugiVector);
utworzonyVector.toString(); 
// x: 5 y: 7
        
gwiazdaSmierci.makeDamage(statekRebeli);
// Statek Rebelii otrzymał obrażenia równe: 10
// Statek Rebelii został zniszczony

gwiazdaSmierci.makeDamage(statekRebeli).catch(error => console.log(error)); 
// Promień gwiazdy śmierci jest niedostepny
        
// Powinna być również możliwość wywołania gwiazdaSmierci.makeDamage() dwa razy
